package com.canadafoodguide.spring.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

    @Override
    protected void configure(HttpSecurity http) throws Exception {

    	//http.httpBasic().and().authorizeRequests().antMatchers("/**").authenticated();
    	//http.authorizeRequests().antMatchers("/GetServings/Gender/**").hasAnyRole("ADMIN","USER");
    	//http.authorizeRequests().antMatchers("/GetServingsByGenderAge").hasAnyRole("ADMIN","USER");
    	//http.authorizeRequests().antMatchers("/GetServings/Category/**").hasAnyRole("ADMIN","USER");
    	//http.authorizeRequests().antMatchers("/GetServings/AgeGroup/**").hasAnyRole("ADMIN","USER");
    	

        http
          .httpBasic().and()
          .authorizeRequests()
            .antMatchers("/GetServings/Gender/**").hasRole("ADMIN");
     
     }

	@Autowired
	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
		  auth.inMemoryAuthentication().withUser("sensorup").password("sensorup123").roles("USER");

	}
	
	
  /*  @Bean
    public BCryptPasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    } */
}
